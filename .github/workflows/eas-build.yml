name: EAS Build and Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      platform:
        description: "Platform to build"
        required: true
        type: choice
        options:
          - all
          - ios
          - android
      profile:
        description: "Build profile"
        required: true
        type: choice
        options:
          - development
          - preview
          - production

jobs:
  # Job 1: Run tests and linting
  test:
    name: Run Tests & Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧹 Run linter
        run: npm run lint --if-present

      - name: 🧪 Run tests
        run: npm test --if-present

  # Job 2: Build for iOS
  build-ios:
    name: Build iOS App
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.event_name == 'workflow_dispatch' && 
      (github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'all')
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔐 Create .env file
        run: |
          cat << EOF > .env
          EXPO_PUBLIC_API_URL=${{ secrets.EXPO_PUBLIC_API_URL }}
          EXPO_PUBLIC_FIREBASE_API_KEY=${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}
          EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          EXPO_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
          EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          EXPO_PUBLIC_FIREBASE_APP_ID=${{ secrets.EXPO_PUBLIC_FIREBASE_APP_ID }}
          EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID=${{ secrets.EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID }}
          EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID=${{ secrets.EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID }}
          EXPO_PUBLIC_REVENUECAT_APPLE_API_KEY=${{ secrets.EXPO_PUBLIC_REVENUECAT_APPLE_API_KEY }}
          EXPO_PUBLIC_EAS_PROJECT_ID=${{ secrets.EXPO_PUBLIC_EAS_PROJECT_ID }}
          EOF

      - name: 🔐 Create GoogleService-Info.plist
        run: |
          echo "${{ secrets.IOS_GOOGLE_SERVICES_PLIST }}" | base64 -d > GoogleService-Info.plist

      - name: 🚀 Build iOS app
        run: |
          PROFILE=${{ github.event.inputs.profile || 'development' }}
          eas build --platform ios --profile $PROFILE --non-interactive --no-wait

  # Job 3: Build for Android
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.event_name == 'workflow_dispatch' && 
      (github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all')
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔐 Create .env file
        run: |
          cat << EOF > .env
          EXPO_PUBLIC_API_URL=${{ secrets.EXPO_PUBLIC_API_URL }}
          EXPO_PUBLIC_FIREBASE_API_KEY=${{ secrets.EXPO_PUBLIC_FIREBASE_API_KEY }}
          EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          EXPO_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
          EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          EXPO_PUBLIC_FIREBASE_APP_ID=${{ secrets.EXPO_PUBLIC_FIREBASE_APP_ID }}
          EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID=${{ secrets.EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID }}
          EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID=${{ secrets.EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID }}
          EXPO_PUBLIC_REVENUECAT_GOOGLE_API_KEY=${{ secrets.EXPO_PUBLIC_REVENUECAT_GOOGLE_API_KEY }}
          EXPO_PUBLIC_EAS_PROJECT_ID=${{ secrets.EXPO_PUBLIC_EAS_PROJECT_ID }}
          EOF

      - name: 🔐 Create google-services.json
        run: |
          echo "${{ secrets.ANDROID_GOOGLE_SERVICES_JSON }}" | base64 -d > google-services.json
          echo "${{ secrets.ANDROID_GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json

      - name: 🚀 Build Android app
        run: |
          PROFILE=${{ github.event.inputs.profile || 'development' }}
          eas build --platform android --profile $PROFILE --non-interactive --no-wait

  # Job 4: Submit to stores (only for production builds)
  submit:
    name: Submit to App Stores
    runs-on: ubuntu-latest
    needs: [build-ios, build-android]
    if: |
      always() &&
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.profile == 'production' &&
      (needs.build-ios.result == 'success' || needs.build-android.result == 'success')
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🔐 Create Android service account key
        if: |
          (github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all') &&
          needs.build-android.result == 'success'
        run: |
          echo '${{ secrets.ANDROID_SERVICE_ACCOUNT_KEY_JSON }}' > service-account-key.json

      - name: 🚀 Submit to iOS App Store
        if: |
          (github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'all') &&
          needs.build-ios.result == 'success'
        run: eas submit --platform ios --latest --non-interactive

      - name: 🚀 Submit to Google Play Store
        if: |
          (github.event.inputs.platform == 'android' || github.event.inputs.platform == 'all') &&
          needs.build-android.result == 'success'
        run: eas submit --platform android --latest --non-interactive
